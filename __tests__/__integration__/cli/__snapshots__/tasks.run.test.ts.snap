// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`run tasks command should be able to repeat a task over an iterable with forEach 1`] = `
"
Task - for-each - \\"Perform this task for each of the values in 'myList'\\"
   ✔   Action (increment the value) \\"Increment by 1\\"
   ✔   Action (validateValue) \\"Validate the increment (2)\\"
Task - for-each - \\"Perform this task for each of the values in 'myList'\\"
   ✔   Action (increment the value) \\"Increment by 1\\"
   ✔   Action (validateValue) \\"Validate the increment (3)\\"
Task - for-each - \\"Perform this task for each of the values in 'myList'\\"
   ✔   Action (increment the value) \\"Increment by 1\\"
   ✔   Action (validateValue) \\"Validate the increment (4)\\"
"
`;

exports[`run tasks command should be able to repeat a task over an iterable with forEach async 1`] = `
"
Task - for-each - \\"Perform this task for each of the values in 'myList' async\\"
   ✔   Running Async \\"for each\\" task \\"for-each\\"
"
`;

exports[`run tasks command should be able to repeat a task over an iterable with forEach async and print failures 1`] = `
"
Task - for-each - \\"Perform this task for each of the values in 'myList' async\\"
   ✖   Running Async \\"for each\\" task \\"for-each\\"
"
`;

exports[`run tasks command should be able to repeat a task over an iterable with forEach async and print failures 2`] = `
"-   Running Async \\"for each\\" task \\"for-each\\"
   -   Running Async \\"for each\\" task \\"for-each\\"
Task \\"for-each\\" (Perform this task for each of the values in 'myList' async) Failed:
   Async js function error callback invoked: The value did not increase!
   The action in progress was \\"validateValue\\".

Task \\"for-each\\" (Perform this task for each of the values in 'myList' async) Failed:
   Async js function error callback invoked: The value did not increase!
   The action in progress was \\"validateValue\\".

Task \\"for-each\\" (Perform this task for each of the values in 'myList' async) Failed:
   Async js function error callback invoked: The value did not increase!
   The action in progress was \\"validateValue\\".
"
`;

exports[`run tasks command should be able to repeat an action over an iterable with forEach 1`] = `
"
Task - repeat-foreach - \\"repeat the action until the validators mark it valid\\"
aardvark
   ✔   Action (printUbuntuAnimals) \\"print animal for Ubuntu release: artful\\"
beaver
   ✔   Action (printUbuntuAnimals) \\"print animal for Ubuntu release: bionic\\"
cuttlefish
   ✔   Action (printUbuntuAnimals) \\"print animal for Ubuntu release: cosmic\\"
dingo
   ✔   Action (printUbuntuAnimals) \\"print animal for Ubuntu release: disco\\"
ermine
   ✔   Action (printUbuntuAnimals) \\"print animal for Ubuntu release: eoan\\"
   ✔   Action (numberUbuntuReleases) \\"calculate major number for each Ubuntu release\\"
   ✔   Action (checkForEachExtracted) \\"check that variables get resolved in repeat.forEach (artful)\\"
   ✔   Action (checkForEachExtracted) \\"check that variables get resolved in repeat.forEach (bionic)\\"
   ✔   Action (checkForEachExtracted) \\"check that variables get resolved in repeat.forEach (cosmic)\\"
   ✔   Action (checkForEachExtracted) \\"check that variables get resolved in repeat.forEach (disco)\\"
   ✔   Action (checkForEachExtracted) \\"check that variables get resolved in repeat.forEach (eoan)\\"
"
`;

exports[`run tasks command should be able to repeat an action until the validators mark it valid 1`] = `
"
Task - repeat-until - \\"repeat the action until the validators mark it valid\\"
   ✔   Action (getFutureTime) \\"get a time in the future\\"
   ✔   Action (checkCurrentTime) \\"check if the current time is beyond the future time\\"
"
`;

exports[`run tasks command should be able to run a CLI command 1`] = `
"
Task - run-zowe-cli - \\"Run a Zowe CLI command\\"
   ✔   Action (runCommand) \\"Run a Zowe CLI Command\\"
"
`;

exports[`run tasks command should be able to substitute values from ENV and global in desc and scripts 1`] = `
"
Task - substitution - \\"var1: Var 1 Value var2: Var 2 Value var3: Var 3 Value\\"
   ✔   Action (Run some javascript) \\"Var 1 ValueVar 2 ValueVar 3 Value\\"
   ✔   Action (Resolve a boolean value inside a string) \\"true\\"
   ✔   Action (Resolve a boolean value not inside a string) \\"true\\"
   ✔   Action (Resolve a numeric value inside a string) \\"42\\"
   ✔   Action (Resolve a numeric value not inside a string) \\"42\\"
"
`;
